#:import Hint uix.screens.character_display.hint.Hint
#:import PreviewButton uix.modules.preview_button.PreviewButton
#:import Refs refs.Refs
#:import LayeredImage modules.layered_image.LayeredImage
#:import HeartIndicator uix.screens.character_display.heart_indicator.HeartIndicator

<FilledCharacterPreviewScreen>:
    background_source: ''
    background: False
    FilledCharacterPreview:
        id: filled_preview
        character: root.character
        support: root.support

<FilledCharacterPreview>:
    Image:
        id: background
        source: root.background_source
    AsyncImage:
        id: char_image
        source: root.char_image_source
    Image:
        id: support_background
        opacity: 0 if root.support == -1 else 1
        source: root.support_background_source
    AsyncImage:
        id: support_image
        opacity: 0 if root.support == -1 else 1
        source: root.support_image_source
    Image:
        id: overlay
        source: root.overlay_source
    Image:
        id: support_overlay
        opacity: 0 if root.support == -1 else 1
        source: root.support_overlay_source
    PreviewButton:
        id: char_button
        path: root.char_button_source
        collision_source: root.char_button_collide_image
        disabled: root.locked
        on_left_click: root.handle_left_click(False)
        on_right_click: root.handle_right_click(False)
        on_hold: root.handle_long_click(False)
    PreviewButton:
        id: support_button
        path: root.support_button_source
        layer: 1
        blocking: True
        collision_source: root.support_button_collide_image
        disabled: root.locked
        on_left_click: root.handle_left_click(True)
        on_right_click: root.handle_right_click(True)
        on_hold: root.handle_long_click(True)
    HeartIndicator:
        id: character_heart
        size_hint: 0.25, 0.062
        pos_hint: {'x': 0.725, 'center_y': 0.961}
        opacity: 0 if (root.is_select or not self.is_visible) else 1
        disabled: True if self.opacity == 0 else False
        on_hint_open: root.on_char_hint_open()
        on_hint_close: root.on_char_hint_close()
    HeartIndicator:
        id: support_heart
        size_hint: 0.25, 0.062
        pos_hint: {'center_x': 0.829, 'center_y': 0.544}
        opacity: 0 if (root.is_select or not self.is_visible) else 1
        disabled: True if self.opacity == 0 else False
        on_hint_open: root.on_support_hint_open()
        on_hint_close: root.on_support_hint_close()
    #Flags
    TypeFlag:
        type: '' if root.is_support else root.attack_type
        opacity: 1 if root.is_select else 0
        size_hint: app.get_dkey('fcp.tf s_h')
        pos_hint: app.get_dkey('fcp.tf p_h')
    ElementFlag:
        type: '' if root.is_support else root.element_type
        opacity: 1 if root.is_select else 0
        size_hint: 0.12, 0.1
        pos_hint: {'top': 0.927, 'right': 0.94}
    Image:
        id: element_icon
        opacity: 0 if root.is_select else 1
        pos_hint: {'center_y': 0.927, 'center_x': 0.94}
        size_hint: 0.12, 0.0375
        source: '' if root.element_type == '' else ('icons/' + root.element_type + '.png')
    # STATS
    LayeredImage:
        id: stats
        data: root.stat_list_data
    Label:
        text: 'Phy. Atk\nMag.Atk\nHealth\nMana\nDefense'
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: None, 0.0324 * 5
        halign: 'left'
        pos_hint: app.get_dkey('fcp.lbl.defense_word p_h')
    Label:
        text: 'trength\nagic\nndurance\ngility\nexterity'
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        halign: 'left'
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: None, 0.0324 * 5
        pos_hint: {'x': 0.2025, 'y': 0.00735}
    Label:
        text: root.number_text
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: None, 0.0324 * 10
        halign: 'right'
        pos_hint: app.get_dkey('fcp.lbl.agility_number p_h')
    # Lock
    Image:
        id: lock
        source: 'icons/lock.png'
        allow_stretch: True
        opacity: 1 if root.locked else 0
        size_hint: app.get_dkey('fcp.lck s_h')
        pos_hint: app.get_dkey('fcp.lck p_h')
    Label:
        id: tag
        text: '[b]Selected[/b]' if root.has_tag else ''
        markup: True
        color: app.get_dkey('fcp.tag c')
        outline_color: app.get_dkey('fcp.tag oc')
        outline_width: app.get_dkey('fcp.tag ow')
        font_size: app.get_dkey('fcp.tag fs', root.height)
        size_hint: app.get_dkey('fcp.tag s_h')
        pos_hint: app.get_dkey('fcp.tag p_h')
    LayeredImage:
        id: stars
        data: root.star_list_data
    Hint:
        id: hint
        disabled: True
        opacity: 0
        size_hint: 0.92, 0.3434
        pos_hint: {'center_x': 0.5, 'top': 0.9273}
        hint_text: root.hint_text