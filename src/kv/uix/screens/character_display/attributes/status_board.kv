#:import GesturePad modules.gesture_pad.GesturePad
#:import LeftRightNavigationArrows modules.navigation_arrows.LeftRightNavigationArrows

<StatusBoardManager>:
    name: 'status_board_unassigned' if root.char is None else 'status_board_' + str(root.char.get_id())
    Image:
        id: background
        source: root.background_source
        allow_stretch: True
    PPCHoverPathButton:
        id: back_button
        path: 'buttons/back'
        size_hint: app.get_dkey('bb s_h')
        pos_hint: app.get_dkey('bb p_h')
        on_release: root.on_back_press()
    Image:
        id: familia_mark
        source: '' if root.char is None else 'familias/marks/Takemikazuchi.png'
        size_hint: app.get_dkey('sbm.sbs s_h')
        pos_hint: app.get_dkey('sbm.sbs p_h')
    DragSnapWidget:
        id: status_board_screen
        relative: True
        on_change: root.on_board_move(self.index)
        size_hint: app.get_dkey('sbm.sbs s_h')
        pos_hint: app.get_dkey('sbm.sbs p_h')
    Label:
        id: board_name
        text: root.current_board_name
        halign: "center"
        markup: True
        color: 0, 0, 0, 1
        font_name: 'Precious'
        size_hint: app.get_dkey('sbm.bn s_h')
        font_size: app.get_dkey('sbm.bn fs', root.height)
        pos_hint: app.get_dkey('sbm.bn p_h')
    PPCHoverPathButton:
        id: available_falna
        path: 'buttons/long_stat'
        text: 'Available Falna'
        font_name: 'Gabriola'
        label_color: app.get_dkey('sbm.afb lc')
        font_size: app.get_dkey('sbm.afb fs', root.height)
        size_hint: app.get_dkey('sbm.afb s_h')
        pos_hint: app.get_dkey('sbm.afb p_h')
    PPCHoverPathButton:
        id: unlock_all
        path: 'buttons/long_stat'
        text: 'Unlock All'
        font_name: 'Gabriola'
        label_color: app.get_dkey('sbm.uab lc')
        font_size: app.get_dkey('sbm.uab fs', root.height)
        size_hint: app.get_dkey('sbm.uab s_h')
        pos_hint: app.get_dkey('sbm.uab p_h')
        on_release: root.on_unlock_all_touch()
    Image:
        id: overlay_background
        source: root.overlay_background_source
        allow_stretch: True
        size_hint: app.get_dkey('sbm.os.ob s_h')
        pos_hint: app.get_dkey('sbm.os p_h')
    Image:
        id: overlay
        source: root.overlay_source
        allow_stretch: True
        size_hint: app.get_dkey('sbm.os.o s_h')
        pos_hint: app.get_dkey('sbm.os p_h')
    StatInfoBox:
        id: persistent_layout
        type_flag_source: '' if root.char is None else "screens/recruit/" + str(root.char.get_type()).lower() + "_flag.png"
        element_flag_source: '' if root.char is None else "screens/attributes/" + root.char.get_element().lower() + "_flag.png"
        element_flag_image_source: '' if root.char is None else "screens/attributes/" + root.char.get_element().lower() + ".png"
        char_type: '' if root.char is None else 'Supporter' if root.char.is_support() else 'Adventurer'
        char_stype: '' if root.char is None else str(root.char.get_type()) + " Type"
        char_element: '' if root.char is None else str(root.char.get_element()).capitalize()
        char_display_name: '' if root.char is None else str(root.char.get_display_name())
        char_name: '' if root.char is None else str(root.char.get_name())
        skills_switch_text: root.skills_switch_text
        on_skills_switch: root.on_skills_switch()
        size_hint: app.get_dkey('sbm.os.o s_h')
        pos_hint: app.get_dkey('sbm.os p_h')
    RelativeLayout:
        id: normal_layout
        size_hint: app.get_dkey('sbm.os.o s_h')
        pos_hint: app.get_dkey('sbm.os p_h')
        PPCHoverPathButton:
            id: upgrade_combat_skills
            path: 'buttons/status_board_ability'
            text: 'Upgrade\nCombat Skills'
            label_halign: "center"
            label_valign: "middle"
            label_color: app.get_dkey('sbm.ucsb lc')
            font_name: 'Precious'
            font_size: app.get_dkey('sbm.ucsb fs', root.height)
            size_hint: app.get_dkey('sbm.ucsb s_h')
            pos_hint: app.get_dkey('sbm.ucsb p_h')
        PPCHoverPathButton:
            id: view_all_abilities
            path: 'buttons/status_board_ability'
            text: 'View All\nAbilities'
            halign: "center"
            valign: "middle"
            label_color: app.get_dkey('sbm.vaab lc')
            font_name: 'Precious'
            font_size: app.get_dkey('sbm.vaab fs', root.height)
            size_hint: app.get_dkey('sbm.vaab s_h')
            pos_hint: app.get_dkey('sbm.vaab p_h')
        Label:
            id: total_label
            text: 'Total Stats'
            font_name: 'Precious'
            height: self.texture_size[1]
            color: app.get_dkey('sbm.tl c')
            font_size: app.get_dkey('sbm.tl fs', root.width)
            size_hint: app.get_dkey('sbm.tl s_h')
            pos_hint: app.get_dkey('sbm.tl p_h')
        StatBox:
            id: total_stats_box
            font: 'Gabriola'
            health: 0 if root.char is None else root.char.get_health()
            mana: 0 if root.char is None else root.char.get_mana()
            phy_attack:  0 if root.char is None else root.char.get_phyatk()
            mag_attack: 0 if root.char is None else root.char.get_magatk()
            defense: 0 if root.char is None else root.char.get_defense()
            color: app.get_dkey('sbm.sts c')
            number_color: app.get_dkey('sbm.sts nc')
            size_hint: app.get_dkey('sbm.sts s_h')
            pos_hint: app.get_dkey('sbm.sts p_h')
        Label:
            id: total_abilities
            text: 'Total Abilities'
            font_name: 'Precious'
            height: self.texture_size[1]
            color: app.get_dkey('sbm.ta c')
            font_size: app.get_dkey('sbm.ta fs', root.width)
            size_hint: app.get_dkey('sbm.ta s_h')
            pos_hint: app.get_dkey('sbm.ta p_h')
        AbilityStatBox:
            id: total_abilities_box
            font: 'Gabriola'
            strength: 0 if root.char is None else root.char.get_strength()
            strength_path: '' if root.char is None else root.char.get_strength_rank()
            magic: 0 if root.char is None else root.char.get_magic()
            magic_path: '' if root.char is None else root.char.get_magic_rank()
            endurance: 0 if root.char is None else root.char.get_endurance()
            endurance_path: '' if root.char is None else root.char.get_endurance_rank()
            dexterity: 0 if root.char is None else root.char.get_dexterity()
            dexterity_path: '' if root.char is None else root.char.get_dexterity_rank()
            agility: 0 if root.char is None else root.char.get_agility()
            agility_path: '' if root.char is None else root.char.get_agility_rank()
            color: app.get_dkey('sbm.tab c')
            size_hint: app.get_dkey('sbm.tab s_h')
            pos_hint: app.get_dkey('sbm.tab p_h')
    RelativeLayout:
        id: skill_layout
        opacity: 0
        size_hint: app.get_dkey('sbm.os.o s_h')
        pos_hint: app.get_dkey('sbm.os p_h')
        SkillsList:
            id: skillslist
            height_unit: skill_layout.height
            size_hint: app.get_dkey('sbm.scrl s_h')
            pos_hint: app.get_dkey('sbm.scrl p_h')
    LayeredImage:
        id: stars
        data: root.star_list_data
    LeftRightNavigationArrows:
        id: arrows
        animate_distance: app.get_dkey('sbm.a ad', self.width)
        animate_start_first: app.get_dkey('sbm.a a_s_l', self.width)
        animate_start_second: app.get_dkey('sbm.a a_s_r', self.width)
        arrow_sh: app.get_dkey('sbm.la s_h')
        arrow_first_ph: app.get_dkey('sbm.la p_h')
        arrow_second_ph: app.get_dkey('sbm.ra p_h')
        on_first: status_board_screen.load_previous()
        on_second: status_board_screen.load_next()
    GesturePad:
        on_left: root.goto_status_board(True)
        on_right: root.goto_status_board(False)