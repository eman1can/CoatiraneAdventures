#:import SnapCarousel uix.modules.snap_carousel.SnapCarousel
#:import PartyIndexer uix.modules.party_indexer.PartyIndexer
#:import LeftRightNavigationArrows modules.navigation_arrows.LeftRightNavigationArrows

<DungeonMain>:
    name: 'dungeon_main'
    title_source: 'screen_title/party.png'
    back_hidden: self.locked
    back_enabled: not self.locked
    home_hidden: self.locked
    home_enabled: not self.locked
    Label:
        id: level_label
        font_name: 'Precious'
        markup: True
        size: self.texture_size
        color: app.get_dkey('dm.ll c')
        font_size: app.get_dkey('dm.ll fs', root.height)
        size_hint: app.get_dkey('dm.ll s_h')
        pos_hint: app.get_dkey('dm.ll p_h')
    Label:
        id: party_score_label
        text: 'Party Score - ' + str(root.party_score)
        font_name: 'Precious'
        size: self.texture_size
        color: app.get_dkey('dm.psl c')
        font_size: app.get_dkey('dm.psl fs', root.height)
        size_hint: app.get_dkey('dm.psl s_h')
        pos_hint: app.get_dkey('dm.psl p_h')
    PPCHoverPathButton:
        id: inventory_button
        path: 'buttons/InventoryButton'
        text: 'Inventory'
        font_name: 'Precious'
        font_size: app.get_dkey('dm.ib fs', root.height)
        size_hint: app.get_dkey('dm.ib s_h')
        pos_hint: app.get_dkey('dm.ib p_h')
        on_release: root.on_inventory()
#    PPCHoverPathButton:
#        id: gear_button
#        path: 'buttons/GearButton'
#        text: 'Gear'
#        font_name: 'Precious'
#        font_size: app.get_dkey('dm.gb fs', root.height)
#        size_hint: app.get_dkey('dm.gb s_h')
#        pos_hint: app.get_dkey('dm.gb p_h')
#        on_release: root.on_gear()
#    Image:
#        id: gear_lock
#        size_hint: app.get_dkey('dm.gb s_h')
#        pos_hint: app.get_dkey('dm.gb p_h')
#        source: 'buttons/dungeon_button_lock.png'
#        opacity: 1 if root.locked else 0
    PPCHoverPathButton:
        id: fight_button
        path: 'buttons/FightButton'
        text: 'Fight'
        font_name: 'Precious'
        font_size: app.get_dkey('dm.ab fs', root.height)
        size_hint: app.get_dkey('dm.ab s_h')
        pos_hint: {"center_x": 0.825, "center_y": 0.875}
        on_release: root.on_fight()
        opacity: 1 if root.boss else 0
        disabled: not root.boss
    PPCHoverPathButton:
        id: ascend_button
        path: 'buttons/AscendButton'
        text: 'Ascend'
        font_name: 'Precious'
        font_size: app.get_dkey('dm.ab fs', root.height)
        size_hint: app.get_dkey('dm.ab s_h')
        pos_hint: app.get_dkey('dm.ab p_h')
        on_release: root.on_ascend()
        opacity: 0 if root.boss else 1
        disabled: root.boss
    Image:
        id: ascend_lock
        size_hint: app.get_dkey('dm.ab s_h')
        pos_hint: app.get_dkey('dm.ab p_h')
        source: 'buttons/dungeon_button_lock.png'
        opacity: 0 if root.boss else 1 if root.level == 0 else 0
        disabled: root.boss
    PPCHoverPathButton:
        id: descend_button
        path: 'buttons/AscendButton'
        text: 'Descend'
        font_name: 'Precious'
        font_size: app.get_dkey('dm.db fs', root.height)
        size_hint: app.get_dkey('dm.db s_h')
        pos_hint: app.get_dkey('dm.db p_h')
        on_release: root.on_descend()
        opacity: 0 if root.boss else 1
        disabled: root.boss
    SnapCarousel:
        id: portfolio
        size_hint: app.get_dkey('dm.cp s_h')
        pos_hint: app.get_dkey('dm.cp p_h')
    PartyIndexer:
        id: indexer
        size_hint: app.get_dkey('dm.ind s_h')
        pos_hint: app.get_dkey('dm.ind p_h')
        opacity: 0 if root.locked else 1
        disabled: root.locked
    LeftRightNavigationArrows:
        id: arrows
        animate_distance: app.get_dkey('dm.a ad', root.width)
        animate_start_first: app.get_dkey('dm.a a_s_l', root.width)
        animate_start_second: app.get_dkey('dm.a a_s_r', root.width)
        arrow_sh: app.get_dkey('dm.la s_h')
        arrow_first_ph: app.get_dkey('dm.la p_h')
        arrow_second_ph: app.get_dkey('dm.ra p_h')
        on_first: portfolio.load_previous()
        on_second: portfolio.load_next()
        opacity: 0 if root.locked else 1
        disabled: root.locked