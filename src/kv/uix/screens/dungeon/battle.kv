#:import BattleHud uix.screens.dungeon.battle_hud.BattleHud
#:import time_header_simple src.uix.modules.headers.time_header_simple
#:import dungeon_header src.uix.modules.headers.dungeon_header
#:import MapScatterLayout uix.screens.dungeon.map_scatter_layout.MapScatterLayout

<DungeonBattle>:
    name: 'dungeon_battle'
    id: dungeon_screen
    EffectWidget:
        id: twirl_widget
        effects: [TwirlEffect()]
        Image:
            id: battle_background
            allow_stretch: True
            source: 'dungeon/battle.png'
        RelativeLayout:
            id: parallax_layer
        RelativeLayout:
            id: skeleton_layer
        BattleHud:
            id: battle_hud
#            opacity: 0
            disabled: True
            on_turn: root.on_turn()
        RelativeLayout:
            id: hud_layer
            RelativeLayout:
                id: enemy_health
            RelativeLayout:
                id: enemy_names
            RelativeLayout:
                id: icons
        RelativeLayout:
            id: animation_layer
        RelativeLayout:
            id: marker_layer
        Widget:
            id: battle_flash
            canvas:
                Color:
                    rgba: 1, 0, 0, root.battle_flash_alpha
                Rectangle:
                    size: self.size
                    pos: self.pos
        ResultHud:
            id: result_hud
            opacity: 0
            disabled: True
        FloorAnnouncement:
            id: floor_announcement
            name: 'Floor: ' + str(root.level_num)
        Label:
            id: map_overlay
            opacity: 0
            canvas.before:
                Color:
                    rgba: 0, 0, 0, 1
                Rectangle:
                    size: self.size
                    pos: self.pos
                Color:
                    rgba: 1, 1, 1, 1

            size: self.texture_size
            size_hint: None, None
            color: 1, 1, 1, 1
            font_name: 'CourierNew'
            font_size: '15pt'
            line_height: 0.99
            markup: True
            pos_hint: {'top': 0.925, 'right': 0.97}
        RelativeLayout:
            id: map
            opacity: 0
            canvas.before:
                Color:
                    rgba: 0, 0, 0, 1
                Rectangle:
                    size: self.size
                    pos: self.pos
            MapScatterLayout:
                id: map_scatter
        RelativeLayout:
            id: info_hud
            opacity: 0
            RelativeLayout:
                id: action_flags
            RelativeLayout:
                id: map_action_flags
            RelativeLayout:
                id: static_action_flags
                ActionFlag:
                    id: inventory
                    text: '[I]nventory'
                    left: False
                    size_hint: 0.175, 0.05
                    pos_hint: {'right': 1, 'center_y': 0.925 - ((map_overlay.height if map_overlay.opacity == 1 else 0) / root.height) - 0.075}
                    on_action: root.on_inventory()
                ActionFlag:
                    id: fullscreen_map
                    text: '[M]ap'
                    left: False
                    size_hint: 0.175, 0.05
                    pos_hint: {'right': 1, 'center_y': 0.925 - ((map_overlay.height if map_overlay.opacity == 1 else 0) / root.height) - 0.15}
                    on_action: root.on_fullscreen_map()
                ActionFlag:
                    id: map_options
                    text: 'Map [O]ptions'
                    left: False
                    size_hint: 0.175, 0.05
                    pos_hint: {'right': 1, 'center_y': 0.925 - ((map_overlay.height if map_overlay.opacity == 1 else 0) / root.height) - 0.225}
                    on_action: root.on_map_options()
            RelativeLayout:
                id: overlay_background
                size_hint: 1, 0.05
                pos_hint: {'top': 1}
                canvas.before:
                    Color:
                        rgba: 1, 1, 1, 1
                    Rectangle:
                        size: self.size
                    Color:
                        rgba: 0, 0, 0, 1
                    Rectangle:
                        size: self.width, self.height * 0.05
                Label:
                    id: dungeon_header
                    size_hint: None, 0.75
                    width: self.texture_size[0] * 1.125
                    pos_hint: {'x': 0.125, 'center_y': 0.5}
                    font_size: '20pt'
                    font_name: 'Precious'
                    color: 0, 0, 0, 1
                    text: dungeon_header()
                Label:
                    id: time_header
                    size_hint: None, 0.75
                    width: self.texture_size[0] * 1.125
                    pos_hint: {'right': 0.875, 'center_y': 0.5}
                    font_size: '20pt'
                    font_name: 'Precious'
                    color: 0, 0, 0, 1
                    text: time_header_simple()
        RelativeLayout:
            id: lose_screen
            opacity: 0
            disabled: True
            RelativeLayout:
                id: lose_background
                opacity: 0
                canvas:
                    Color:
                        rgba: 0, 0, 0, 1
                    Rectangle:
                        size: self.size
            Label:
                id: lose_label
                opacity: 0
                size_hint: None, None
                size: self.texture_size
                pos_hint: {'center_x': 0.5, 'center_y': 0.6}
                font_size: root.height * 0.2
                font_name: 'Gabriola'
                color: 1, 1, 1, 1
                text: 'You Lose!'
            Button:
                id: lose_button
                opacity: 0
                disabled: True
                size_hint: 0.4, 0.125
                pos_hint: {'center_x': 0.5, 'center_y': 0.3}
                text: 'Load from save'
                font_size: root.height * 0.075
                font_name: 'Gabriola'
                color: 1, 1, 1, 1
                on_release: root.load_save()
#            Button:
#                id: map_options
#                size_hint: 0.05, 0.073
#                pos_hint: {'right': 0.95}
#                y: map_overlay.y - root.height * 0.025 - self.height if map_overlay.opacity == 1 else root.height * 0.95 - self.height
#                background_normal: 'buttons/map_options.normal.png'
#                background_down: 'buttons/map_options.normal.png'
#                on_release: root.on_map_options()
#        Button:
#            id: inventory
#            opacity: 0
#            size_hint: 0.05, 0.113
#            pos_hint: {'right': 0.875}
#            y: map_overlay.y - root.height * 0.025 - self.height if map_overlay.opacity == 1 else root.height * 0.95 - self.height
#            background_normal: 'buttons/battle_inventory.normal.png'
#            background_down: 'buttons/battle_inventory.normal.png'
#            on_release: root.on_inventory()
#        PPCHoverPathToggleButton:
#            id: auto_move_button
    #        toggle_enabled: True
    #        toggle_state: root.auto_move_enabled
    #        on_toggle_down: root.on_auto_move()
    #        on_toggle_up: root.on_auto_move_cancel()
#            path: 'buttons/auto_move'
#            opacity: 0 if root.in_encounter else 1
#            disabled: True if root.in_encounter else False
#            size_hint: 0.1, 0.105
#            pos_hint: {'center_x': 0.15, 'top': 0.975}
#        PPCHoverPathToggleButton:
#            id: auto_battle_button
    #        toggle_enabled: True
    #        toggle_state: root.auto_battle_enabled
    #        on_toggle_down: root.on_auto_battle()
    #        on_toggle_up: root.on_auto_battle_cancel()
#            path: 'buttons/auto_battle'
#            opacity: 1 if root.in_encounter else 0
#            disabled: False if root.in_encounter else True
#            size_hint: 0.106, 0.105
#            pos_hint: {'center_x': 0.15, 'top': 0.975}
#        PPCHoverPathButton:
#            id: status_button
#            path: 'buttons/invisible'
#            disabled: True
#            opacity: 0
#            on_release: root.return_to_run()



<FloorAnnouncement>:
    source: 'dungeon/floor_start.png'
    RelativeLayout:
        size: root.size
        pos: 0, 0
        Label:
            text: root.name
            font_name: 'Precious'
            font_size: root.height * 0.075
            color: 0.9, 0.9, 0.9, 1
            outline_color: 0, 0, 0, 1
            outline_width: 3
            size_hint: 1, 0.2
            pos_hint: {'center_x': 0.5, 'y': 0.7}


<ActionFlag>:
    canvas:
        PushMatrix:
        Scale:
            x: 1 if root.left else -1
        Translate:
            x: 0 if root.left else -self.width
        Color:
            rgba: root.background_color
        Rectangle:
            size: self.width * 0.9, self.height
        #:set bite_off 0.9
        Triangle:
            points: self.width * bite_off, self.height, self.width, self.height, self.width * bite_off, self.height * 0.5, self.width * bite_off, self.height
        Triangle:
            points: self.width * bite_off, self.height * 0.5, self.width, 0, self.width * bite_off, 0, self.width * bite_off, self.height * 0.5
        Color:
            rgba: 0, 0, 0, 1
        Line:
            points: 0, 0, self.width, 0, self.width * bite_off, self.height * 0.5, self.width, self.height, 0, self.height, 0, 0
            width: 2
            cap: 'none'
            joint: 'miter'
            close: True
        PopMatrix:
    Label:
        size_hint: 0.9, 1
        font_name: 'Gabriola'
        font_size: root.height * 0.75
        color: 0, 0, 0, 1
        text: root.text
        pos_hint: {'x': 0 if root.left else 0.1}
    Button:
        opacity: 0
        on_release: root.dispatch('on_action')
        disabled: root.disabled


<EnemyNamePreview>:
    Label:
        text: root.name
        font_name: 'Gabriola'
        font_size: root.height * 0.4
        outline_color: 0, 0, 0, 1
        outline_width: 2
        size_hint: 1, 0.5
        pos_hint: {'center_y': 0.5}


<EnemyHealth>:
    canvas:
        Color:
            rgba: 0.15, 0.15, 0.15, 1
        Rectangle:
            size: self.width, self.height * 0.125
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            size: max(self.width * self.health / self.max, 0), self.height * 0.125
            texture: Gradient.horizontal(self.width * self.health / self.max, self.width, self.height, (121, 44, 142, 255), (224, 207, 229, 255))
    IconTray:
        id: icon_tray
        size_hint: 1, 0.875
        pos_hint: {'top': 1}
        opacity: 0